include_defs("buckit//DEFS")

libs = [
    (
        PLATFORM_MAC,
        [
            LibraryRule("profiler"),
            LibraryRule("tcmalloc"),
            LibraryRule("tcmalloc_and_profiler"),
            LibraryRule("tcmalloc_debug"),
            LibraryRule("tcmalloc_minimal"),
            LibraryRule("tcmalloc_minimal_debug"),
        ],
    ),
    (
        PLATFORM_LINUX,
        [
            LibraryRule(
                "profiler",
                ["libunwind//libunwind:unwind"],
            ),
            LibraryRule(
                "tcmalloc",
                ["libunwind//libunwind:unwind"],
            ),
            LibraryRule(
                "tcmalloc_and_profiler",
                ["libunwind//libunwind:unwind"],
            ),
            LibraryRule(
                "tcmalloc_debug",
                ["libunwind//libunwind:unwind"],
            ),
            LibraryRule("tcmalloc_minimal"),
            LibraryRule("tcmalloc_minimal_debug"),
        ],
    ),
]

cmd = """
# Deprecated libs on osx
CPPFLAGS="${CPPFLAGS} -D_XOPEN_SOURCE"
mkdir -p "${ORIG_SRC_DIR}"/../build && \\
cd "${ORIG_SRC_DIR}"/../build && \\
autoreconf -i "${ORIG_SRC_DIR}" && \\
"${ORIG_SRC_DIR}/configure" --prefix="${ESCAPED_INSTALL_PREFIX}" && \\
make -j "${BUCKIT_PARALLELISM}" && \\
make install && \\
rm -rf "${INSTALL_PREFIX}/include/google/base" && \\
cp -prvf "${ORIG_SRC_DIR}/src/base" "${INSTALL_PREFIX}/include/google/base" && \\
cp "${ORIG_SRC_DIR}/../build/src/config.h" "${INSTALL_PREFIX}/include/google/base/gpconfig.h" && \\
sed -i.bak -e 's,<config.h>,<google/base/gpconfig.h>,g' -e \\
  's,include "base/\(.*\)",include "google/base/\\1",' \\
  "${INSTALL_PREFIX}/include/google/base/"*.h \\
  "${INSTALL_PREFIX}/include/google/base/"*.c \\
  "${INSTALL_PREFIX}/include/google/base/"*.cc && \\
make clean
"""

buckit_cpp_custom_library(
    srcs = ["configure.ac"],
    cmd = cmd,
    escape_install_prefix = True,
    libs = libs,
    main_rule = "google-perftools",
)

prebuilt_cxx_library(
    name = "internal",
    header_only = True,
    visibility = ["PUBLIC"],
    deps = [":profiler"],
)
