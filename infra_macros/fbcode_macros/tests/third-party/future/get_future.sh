#!/bin/bash

# Get the future whl for py2/py3 compatibility in tests
set -ev


temp_dir=$(mktemp -d)

if [ ! -z "$temp_dir" ]; then
  trap "rm -rf \"$temp_dir\"" EXIT
fi

setup_venv() {
  pyenv virtualenv create_future --venv-base-dir "$temp_dir/venv"
  unset HTTPS_PROXY
  unset HTTP_PROXY
}

filename="future-0.16.0-py2.py3-none-any.whl"
extracted_dir="future-0.16.0"
filename_tarball="future-0.16.0.tar.gz"
unverified_filename="${filename_tarball}.unverified"
expected_hash="86ed881acef874d04576b9df03c29d25ad2cd25f"

pushd "$temp_dir" 
curl 'https://pypi.python.org/packages/00/2b/8d082ddfed935f3608cc61140df6dcbf0edea1bc3ab52fb6c29ae3e81e85/future-0.16.0.tar.gz#md5=3e8e88a2bda48d54b1da7634d04760d7' > "$unverified_filename"
sha=$(sha1sum "$unverified_filename" | awk {'print $1'})

if [ "$sha" != "$expected_hash" ]; then
  echo "Invalid sha detected for $unverified_filename Expected $expected_hash , got $sha"
  exit 1
fi
mv "$unverified_filename" "$filename_tarball"
tar -xzvf "$filename_tarball"

pushd "$extracted_dir"
setup_venv
source "$temp_dir/venv/create_future/bin/activate"
pip install wheel
python setup.py bdist_wheel --universal
deactivate

mv dist/"$filename" ../"$filename"
popd
popd
mv "$temp_dir/$filename" "$filename"

cat > BUCK <<EOF
# Generated by get_future.sh

prebuilt_python_library(
    name = "future",
    binary_src = "$filename",
    visibility = ["//tests/..."],
)
EOF
